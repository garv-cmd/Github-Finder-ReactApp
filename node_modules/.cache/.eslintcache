[{"/Users/garvwadhwa/Desktop/github-finder/src/index.js":"1","/Users/garvwadhwa/Desktop/github-finder/src/App.js":"2","/Users/garvwadhwa/Desktop/github-finder/src/components/layouts/Navbar.js":"3","/Users/garvwadhwa/Desktop/github-finder/src/components/users/UserItem.js":"4","/Users/garvwadhwa/Desktop/github-finder/src/components/users/Users.js":"5","/Users/garvwadhwa/Desktop/github-finder/src/components/layouts/Spinner.js":"6","/Users/garvwadhwa/Desktop/github-finder/src/components/users/Search.js":"7","/Users/garvwadhwa/Desktop/github-finder/src/components/layouts/Alert.js":"8","/Users/garvwadhwa/Desktop/github-finder/src/components/pages/About.js":"9","/Users/garvwadhwa/Desktop/github-finder/src/components/users/User.js":"10","/Users/garvwadhwa/Desktop/github-finder/src/components/repos/Repos.js":"11","/Users/garvwadhwa/Desktop/github-finder/src/components/repos/RepoItem.js":"12"},{"size":438,"mtime":1617366099409,"results":"13","hashOfConfig":"14"},{"size":3491,"mtime":1617446106897,"results":"15","hashOfConfig":"14"},{"size":855,"mtime":1617377980491,"results":"16","hashOfConfig":"14"},{"size":741,"mtime":1617378690529,"results":"17","hashOfConfig":"14"},{"size":705,"mtime":1617368738892,"results":"18","hashOfConfig":"14"},{"size":255,"mtime":1617365225939,"results":"19","hashOfConfig":"14"},{"size":1137,"mtime":1617387732304,"results":"20","hashOfConfig":"14"},{"size":337,"mtime":1617376657920,"results":"21","hashOfConfig":"14"},{"size":230,"mtime":1617377797498,"results":"22","hashOfConfig":"14"},{"size":3447,"mtime":1617387599373,"results":"23","hashOfConfig":"14"},{"size":283,"mtime":1617380852880,"results":"24","hashOfConfig":"14"},{"size":252,"mtime":1617380804467,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vdwbhw",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/garvwadhwa/Desktop/github-finder/src/index.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/App.js",["54"],"import React,{useState,useEffect} from 'react'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport './App.css';\nimport Navbar from '../src/components/layouts/Navbar'\nimport Users from '../src/components/users/Users'\nimport axios from 'axios'\nimport Search from '../src/components/users/Search'\nimport Alert from './components/layouts/Alert'\nimport About from './components/pages/About'\nimport User from './components/users/User'\n\nconst App =()=> {\n  const[users,setUsers] = useState([]);\n  const[user,setUser] = useState({});\n  const[repos,setRepos] = useState([]);\n  const[loading,setLoading] = useState(false);\n  const[alert,setAlert] = useState(null);\n \n  useEffect(async()=>{\n     // set loading true\n  setLoading(true)\n  const res = await axios.get\n  (`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  setUsers(res.data);\n  setLoading(false)\n  },[])\n  \n//  async componentDidMount(){  //it is a lifecycle method , render is also\n \n//   }\n  //search github users\n const searchUsers=async (text)=>{\n    \n    setLoading(true)\n    const res = await axios.get\n  (`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  setUsers(res.data.items);\n  setLoading(false)\n  }\n\n  //search single github user\n  \n  const getUser=async(username)=>{\n    setLoading(true)\n    const res = await axios.get\n  (`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  setUser(res.data);\n  setLoading(false)\n  }\n\n\n  //get User repos\n  const getUserRepos =async (username)=>{\n    setLoading(true)\n    const res = await axios.get\n  (`https://api.github.com/users/${username}/repos?per_page=10&sort=create:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n \n  setRepos(res.data);\n  setLoading(false)\n  }\n\n\n const clearUsers = ()=>{\n    setUsers([]);\n    setLoading(false)\n  }\n\n const addAlert=(msg,type)=>{\n   \n    setAlert({msg,type})\n    setTimeout(()=>{\n      setAlert(null)\n    },4000)\n  }\n\n    return (\n      <Router>\n        <div className=\"App \">\n        <Navbar />\n        <div className=\"container\" style={{backgroundColor:\"white\"}}>\n          <Alert alert={alert}/>\n          <Switch>\n\n            <Route path='/' exact render={props=>(\n              <>\n               <Search searchUsers={searchUsers} \n          clearUsers={clearUsers} \n          showClear={users.length>0 ? true:false}\n          setAlert={addAlert}\n          />\n        <Users loading={loading} users={users}/>\n              </>\n            )}></Route>\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path=\"/user/:login\"  render={props=>(\n            \n            <User {...props} getUser={getUser} getUserRepos={getUserRepos} repos={repos} user={user} loading={loading} ></User>\n            \n          )}\n          ></Route>\n          </Switch>\n         \n        </div>\n       \n      </div>\n\n      </Router>\n      \n    );\n  }\n  \n\n\nexport default App;\n","/Users/garvwadhwa/Desktop/github-finder/src/components/layouts/Navbar.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/components/users/UserItem.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/components/users/Users.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/components/layouts/Spinner.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/components/users/Search.js",["55"],"import React,{useState} from 'react'\nimport PropTypes from 'prop-types';\n\nconst Search =({searchUsers,clearUsers,showClear,setAlert})=>{\n\n    const [text,setText] = useState('');\n\n    const onChange = e => setText(e.target.value);\n   const onSubmit=(e)=>{\n        e.preventDefault();\n        if(text==''){\n            setAlert('Please Enter Something','danger')\n        }else{\n            searchUsers(text)\n            setText('')\n        }\n      \n    }\n\n        return (\n            <div >\n            <form onSubmit={onSubmit} className=\"form\">\n                <input type=\"text\" name=\"text\" placeholder=\"Search Users...\" value={text} onChange={onChange}></input>\n                <input type=\"submit\" value=\"search\" className=\"btn btn-dark btn-block\"/>\n            </form>\n            {showClear &&  <button  className=\"btn btn-light btn-block\" onClick={clearUsers} >Clear</button>}\n           \n        </div>\n        )\n    \n}\nSearch.propTypes={\n    searchUsers:PropTypes.func.isRequired,\n    clearUsers:PropTypes.func.isRequired,\n    showClear:PropTypes.bool.isRequired,\n    setAlert:PropTypes.func.isRequired,\n}\nexport default Search","/Users/garvwadhwa/Desktop/github-finder/src/components/layouts/Alert.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/components/pages/About.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/components/users/User.js",["56"],"import React, { useEffect } from 'react'\nimport Spinner from '../layouts/Spinner'\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\nimport Repos from '../repos/Repos'\nconst User =({user,loading,getUser,getUserRepos,repos,match})=>{\n  useEffect(()=>{\n    getUser(match.params.login)\n    getUserRepos(match.params.login)\n  },[])\n\n    \n        const {name,\n            company,\n            avatar_url,\n            location,\n            bio,\n            blog,\n            login,\n            html_url,\n            followers,\n            following,\n            public_repos,\n            public_gists,\n            hireable} = user;\n        \n\n        if(loading){\n            return <Spinner/>\n        }else{\n            return (\n                <>\n                <Link to='/' className='btn btn-light'>\n                  Back To Search\n                </Link>\n                Hireable:{' '}\n                {hireable ? (\n                  <i className='fas fa-check text-success' />\n                ) : (\n                  <i className='fas fa-times-circle text-danger' />\n                )}\n                <div className='card grid-2'>\n                  <div className='all-center'>\n                    <img\n                      src={avatar_url}\n                      className='round-img'\n                      alt=''\n                      style={{ width: '150px' }}\n                    />\n                    <h1>{name}</h1>\n                    <p>Location: {location}</p>\n                  </div>\n                  <div>\n                    {bio && (\n                      <>\n                        <h3>Bio</h3>\n                        <p>{bio}</p>\n                      </>\n                    )}\n                    <a href={html_url} className='btn btn-dark my-1'>\n                      Visit Github Profile\n                    </a>\n                    <ul>\n                      <li>\n                        {login && (\n                          <>\n                            <strong>Username: </strong> {login}\n                          </>\n                        )}\n                      </li>\n          \n                      <li>\n                        {company && (\n                          <>\n                            <strong>Company: </strong> {company}\n                          </>\n                        )}\n                      </li>\n          \n                      <li>\n                        {blog && (\n                          <>\n                            <strong>Website: </strong> {blog}\n                          </>\n                        )}\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n                <div className='card text-center'>\n                  <div className='badge badge-primary'>Followers: {followers}</div>\n                  <div className='badge badge-success'>Following: {following}</div>\n                  <div className='badge badge-light'>Public Repos: {public_repos}</div>\n                  <div className='badge badge-dark'>Public Gists: {public_gists}</div>\n                </div>\n                <Repos repos={repos}/>\n              </>\n            )\n        }\n        \n    \n}\nUser.propTypes={\n  loading:PropTypes.bool.isRequired,\n  user:PropTypes.object.isRequired,\n  getUser:PropTypes.func.isRequired,\n  getUserRepos:PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n}\nexport default User\n","/Users/garvwadhwa/Desktop/github-finder/src/components/repos/Repos.js",[],"/Users/garvwadhwa/Desktop/github-finder/src/components/repos/RepoItem.js",["57"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RepoItem = ({ repo }) => {\n  return (\n    <div className='card'>\n      <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h3>\n    </div>\n  );\n};\n\n\n\nexport default RepoItem;",{"ruleId":"58","severity":1,"message":"59","line":19,"column":13,"nodeType":"60","endLine":27,"endColumn":4},{"ruleId":"61","severity":1,"message":"62","line":11,"column":16,"nodeType":"63","messageId":"64","endLine":11,"endColumn":18},{"ruleId":"58","severity":1,"message":"65","line":10,"column":5,"nodeType":"66","endLine":10,"endColumn":7,"suggestions":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":17},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getUser', 'getUserRepos', and 'match.params.login'. Either include them or remove the dependency array. If 'getUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar",{"desc":"73","fix":"74"},"Update the dependencies array to be: [getUser, getUserRepos, match.params.login]",{"range":"75","text":"76"},[347,349],"[getUser, getUserRepos, match.params.login]"]