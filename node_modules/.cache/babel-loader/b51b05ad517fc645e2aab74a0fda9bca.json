{"ast":null,"code":"var _jsxFileName = \"/Users/garvwadhwa/Desktop/github-finder/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from '../src/components/layouts/Navbar';\nimport Users from '../src/components/users/Users';\nimport axios from 'axios';\nimport Search from '../src/components/users/Search';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\nimport User from './components/users/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      user: {},\n      repos: [],\n      loading: false,\n      alert: null\n    };\n\n    this.searchUsers = async text => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n      this.setState({\n        users: res.data.items,\n        loading: false\n      });\n    };\n\n    this.getUser = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n      this.setState({\n        user: res.data,\n        loading: false\n      });\n    };\n\n    this.getUserRepos = async username => {\n      this.setState({\n        loading: true\n      });\n      const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=10&sort=create:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n      this.setState({\n        repos: res.data,\n        loading: false\n      });\n    };\n\n    this.clearUsers = () => {\n      this.setState({\n        users: [],\n        loading: false\n      });\n    };\n\n    this.setAlert = (msg, type) => {\n      this.setState({\n        alert: {\n          msg: msg,\n          type: type\n        }\n      });\n      setTimeout(() => {\n        this.setState({\n          alert: null\n        });\n      }, 4000);\n    };\n  }\n\n  async componentDidMount() {\n    //it is a lifecycle method , render is also\n    // set loading true\n    this.setState({\n      loading: true\n    });\n    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n    this.setState({\n      users: res.data,\n      loading: false\n    });\n  } //search github users\n\n\n  render() {\n    const {\n      users,\n      user,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App bgColor\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          style: {\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            alert: this.state.alert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  searchUsers: this.searchUsers,\n                  clearUsers: this.clearUsers,\n                  showClear: users.length > 0 ? true : false,\n                  setAlert: this.setAlert\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 16\n                }, this), /*#__PURE__*/_jsxDEV(Users, {\n                  loading: loading,\n                  users: users\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              component: About\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/user/:login\",\n              render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n                getUser: this.getUser,\n                getUserRepos: this.getUserRepos,\n                repos: repos,\n                user: user,\n                loading: loading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/garvwadhwa/Desktop/github-finder/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Navbar","Users","axios","Search","Alert","About","User","App","Component","state","users","user","repos","loading","alert","searchUsers","text","setState","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","setAlert","msg","type","setTimeout","componentDidMount","render","backgroundColor","props","length"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport './App.css';\nimport Navbar from '../src/components/layouts/Navbar'\nimport Users from '../src/components/users/Users'\nimport axios from 'axios'\nimport Search from '../src/components/users/Search'\nimport Alert from './components/layouts/Alert'\nimport About from './components/pages/About'\nimport User from './components/users/User'\n\nclass App extends React.Component {\n  state={\n    users:[],\n    user:{},\n    repos:[],\n    loading:false,\n    alert:null\n  }\n async componentDidMount(){  //it is a lifecycle method , render is also\n  // set loading true\n  this.setState({loading:true})\n\n  const res = await axios.get\n  (`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  this.setState({users:res.data,loading:false})\n\n  \n \n\n  }\n  //search github users\n  searchUsers=async (text)=>{\n    \n    this.setState({loading:true})\n    const res = await axios.get\n  (`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  this.setState({users:res.data.items,loading:false})\n\n  }\n\n  //search single github user\n  \n  getUser=async(username)=>{\n    this.setState({loading:true})\n    const res = await axios.get\n  (`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  this.setState({user:res.data,loading:false})\n  }\n\n\n  //get User repos\n  getUserRepos =async (username)=>{\n    this.setState({loading:true})\n    const res = await axios.get\n  (`https://api.github.com/users/${username}/repos?per_page=10&sort=create:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  this.setState({repos:res.data,loading:false})\n  }\n\n\n  clearUsers = ()=>{\n    this.setState({\n      users:[],\n      loading:false\n    })\n  }\n\n  setAlert=(msg,type)=>{\n    this.setState({\n      alert:{msg:msg,type:type}\n    })\n    setTimeout(()=>{\n      this.setState({\n        alert:null\n      })\n    },4000)\n  }\n\n\n  render(){\n\n    const {users,user,loading} = this.state;\n\n    return (\n      <Router>\n        <div className=\"App bgColor\">\n        <Navbar />\n        <div className=\"container\" style={{backgroundColor:\"white\"}}>\n          <Alert alert={this.state.alert}/>\n          <Switch>\n\n            <Route path='/' exact render={props=>(\n              <>\n               <Search searchUsers={this.searchUsers} \n          clearUsers={this.clearUsers} \n          showClear={users.length>0 ? true:false}\n          setAlert={this.setAlert}\n          />\n        <Users loading={loading} users={users}/>\n              </>\n            )}></Route>\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path=\"/user/:login\"  render={props=>(\n            \n            <User {...props} getUser={this.getUser} getUserRepos={this.getUserRepos} repos={repos} user={user} loading={loading} ></User>\n            \n          )}\n          ></Route>\n          </Switch>\n         \n        </div>\n       \n      </div>\n\n      </Router>\n      \n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}