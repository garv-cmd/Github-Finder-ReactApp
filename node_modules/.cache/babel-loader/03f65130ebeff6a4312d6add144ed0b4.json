{"ast":null,"code":"var _jsxFileName = \"/Users/garvwadhwa/Desktop/github-finder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from '../src/components/layouts/Navbar';\nimport Users from '../src/components/users/Users';\nimport axios from 'axios';\nimport Search from '../src/components/users/Search';\nimport Alert from './components/layouts/Alert';\nimport About from './components/pages/About';\nimport User from './components/users/User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n  useEffect(async () => {\n    // set loading true\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n    setUsers(res.data);\n    setLoading(false);\n  }, []); //  async componentDidMount(){  //it is a lifecycle method , render is also\n  //   }\n  //search github users\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n    setUsers(res.data.items);\n    setLoading(false);\n  }; //search single github user\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n    setUser(res.data);\n    setLoading(false);\n  }; //get User repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=10&sort=create:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`); // data is ready so set loading to false and set the data\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  const clearUsers = () => {\n    setUsers([]);\n    setLoading(false);\n  };\n\n  const addAlert = (msg, type) => {\n    setAlert({\n      msg,\n      type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 4000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App bgColor\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          backgroundColor: \"white\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            render: props => /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                searchUsers: searchUsers,\n                clearUsers: clearUsers,\n                showClear: users.length > 0 ? true : false,\n                setAlert: addAlert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 16\n              }, this), /*#__PURE__*/_jsxDEV(Users, {\n                loading: loading,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/user/:login\",\n            render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n              getUser: getUser,\n              getUserRepos: getUserRepos,\n              repos: repos,\n              user: user,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"xT9cs3U6kmiit+a9OJX+9ajMLCk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/garvwadhwa/Desktop/github-finder/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Navbar","Users","axios","Search","Alert","About","User","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","searchUsers","text","items","getUser","username","getUserRepos","clearUsers","addAlert","msg","type","setTimeout","backgroundColor","props","length"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport './App.css';\nimport Navbar from '../src/components/layouts/Navbar'\nimport Users from '../src/components/users/Users'\nimport axios from 'axios'\nimport Search from '../src/components/users/Search'\nimport Alert from './components/layouts/Alert'\nimport About from './components/pages/About'\nimport User from './components/users/User'\n\nconst App =()=> {\n  const[users,setUsers] = useState([]);\n  const[user,setUser] = useState({});\n  const[repos,setRepos] = useState([]);\n  const[loading,setLoading] = useState(false);\n  const[alert,setAlert] = useState(null);\n \n  useEffect(async()=>{\n     // set loading true\n  setLoading(true)\n  const res = await axios.get\n  (`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  setUsers(res.data);\n  setLoading(false)\n  },[])\n  \n//  async componentDidMount(){  //it is a lifecycle method , render is also\n \n//   }\n  //search github users\n const searchUsers=async (text)=>{\n    \n    setLoading(true)\n    const res = await axios.get\n  (`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  setUsers(res.data.items);\n  setLoading(false)\n  }\n\n  //search single github user\n  \n  const getUser=async(username)=>{\n    setLoading(true)\n    const res = await axios.get\n  (`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n  setUser(res.data);\n  setLoading(false)\n  }\n\n\n  //get User repos\n  const getUserRepos =async (username)=>{\n    setLoading(true)\n    const res = await axios.get\n  (`https://api.github.com/users/${username}/repos?per_page=10&sort=create:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n  // data is ready so set loading to false and set the data\n \n  setRepos(res.data);\n  setLoading(false)\n  }\n\n\n const clearUsers = ()=>{\n    setUsers([]);\n    setLoading(false)\n  }\n\n const addAlert=(msg,type)=>{\n   \n    setAlert({msg,type})\n    setTimeout(()=>{\n      setAlert(null)\n    },4000)\n  }\n\n    return (\n      <Router>\n        <div className=\"App bgColor\">\n        <Navbar />\n        <div className=\"container\" style={{backgroundColor:\"white\"}}>\n          <Alert alert={alert}/>\n          <Switch>\n\n            <Route path='/' exact render={props=>(\n              <>\n               <Search searchUsers={searchUsers} \n          clearUsers={clearUsers} \n          showClear={users.length>0 ? true:false}\n          setAlert={addAlert}\n          />\n        <Users loading={loading} users={users}/>\n              </>\n            )}></Route>\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path=\"/user/:login\"  render={props=>(\n            \n            <User {...props} getUser={getUser} getUserRepos={getUserRepos} repos={repos} user={user} loading={loading} ></User>\n            \n          )}\n          ></Route>\n          </Switch>\n         \n        </div>\n       \n      </div>\n\n      </Router>\n      \n    );\n  }\n  \n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}